import requests
import sys
import os
import datetime
import json
import win32api
import time
from ast import literal_eval

api_key = ''

print(len(sys.argv))
if len(sys.argv) > 1 and api_key:
    print("ok")
    imsiDir = "imsi/"
    if not (os.path.isdir(imsiDir)):  # imsi 디렉토리가 없으면 만든다.
        os.makedirs(os.path.join(imsiDir))

    for i in range(1, len(sys.argv)):
        filenames = os.listdir(sys.argv[i])
        print(filenames)

        for (path, dirs, filenames) in os.walk(sys.argv[i]):
            for filename in filenames:
                full_filename = os.path.join(path, filename)
                print(full_filename)
                os.system('certUtil -hashfile "' + full_filename + '" MD5 > ' + imsiDir + 'imsi_hash.txt')
                txtf = open(imsiDir + "imsi_hash.txt", "r", encoding="euckr")
                data = txtf.read()
                second_line = data.split('\n', 2)[1]
                hash = second_line.replace(" ", "")
                print("파일명: ", full_filename, "###########\t\t md5 해쉬: ", hash)

                url = f"https://public.api.malwares.com/api/v22/file/analysis/{hash}"
                headers = {
                    "x-api-key": "",
                }

                response = requests.request("GET", url, headers=headers)
                json_response = response.json()
                # json_response = str(json_response).replace("\'", "\"")
                print(json_response)

                if json_response['result_code'] == int(200):  # or json_response['result_code'] == int(200):
                    pass
                    print("서버에 해시정보가 있습니다. 보내주신 해시값과 서버의 해시값을 비교합니다.")
                    f = open(imsiDir + hash + ".txt", "w")
                    f.write(str(json_response))
                    # f.write(json_response)
                    f.close()

                    with open(imsiDir + hash + ".txt") as f:
                        # data2 = json.load(json_file)
                        # data2 = eval(f.read())
                        data2 = literal_eval(f.read())  # str -> dic로 읽는다.

                        ai_score = data2['data']['ai_score']
                        print(ai_score)
                        if 'signcheck' in data2 and data2['signcheck']:
                            signcheck = data2['signcheck']['verified']
                        else:
                            signcheck = 'None'
                        print(signcheck)
                        check = "파일이름 : " + str(filename) + "\nai_score : " + str(ai_score) + "\nsigncheck : " + str(
                            signcheck) + "\n\nDetection Malware!!!!!! "
                        if signcheck == "unsigned" or ai_score > int(3):
                            # if signcheck == 'None' or signcheck == "unsigned" or ai_score > int(3):
                            win32api.MessageBox(None, check, 'Warning!!!!', 0)

                elif json_response['result_code'] == int(2):
                    print(full_filename, " 이 파일은 현재 분석 진행중입니다. 5분 후에 다시 시도 하시기 바랍니다.")

                elif json_response['result_code'] == int(404):
                    print(full_filename, " 이 파일은 서버에 해시정보가 없습니다. 악성파일 가능성이 있으므로 직접 홈페이지에 파일업로드하여 점검하시기 바랍니다.")

                    check = "파일이름 : " + str(
                        filename) + "\n\n이 파일은 서버에 해시정보가 없습니다.\n악성파일 가능성이 있으므로 직접 아래 홈페이지에 파일업로드하여 점검하시기 바랍니다.\n\nMalware Suspicion!!!!!!\n\nhttps://www.malwares.com/ "
                    # if signcheck == "unsigned" or ai_score > int(3):
                    # if signcheck == 'None' or signcheck == "unsigned" or ai_score > int(3):
                    win32api.MessageBox(None, check, 'Warning!!!!', 0)

                else:
                    # json_response['result_code'] == int(0)
                    print("요청시 잘못된 파라미터, 사용권한 없음 및 API키 오류 등이 발생하였습니다. 정상적으로 다시 요청하여 주시기 바랍니다.")

                txtf.close()
            time.sleep(1)
