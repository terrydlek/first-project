import requests
import sys
import os
import win32api
import time
from ast import literal_eval

api_key = '5D7F30B9145B41DD888A72A24C9C9A7AA671995FE0EF4F1189AAFA20179EF4E4'

print(len(sys.argv))
if len(sys.argv) > 1 and api_key:
    print("ok")
    imsiDir = "imsi/"
    if not (os.path.isdir(imsiDir)):  # imsi 디렉토리가 없으면 만든다.
        os.makedirs(os.path.join(imsiDir))

    for i in range(1, len(sys.argv)):
        filenames = os.listdir(sys.argv[i])
        print(filenames)

        for (path, dirs, filenames) in os.walk(sys.argv[i]):
            for filename in filenames:
                full_filename = os.path.join(path, filename)
                print(full_filename)
                os.system('certUtil -hashfile "' + full_filename + '" MD5 > ' + imsiDir + 'imsi_hash.txt')
                txtf = open(imsiDir + "imsi_hash.txt", "r", encoding="euckr")
                data = txtf.read()
                second_line = data.split('\n', 2)[1]
                hash = second_line.replace(" ", "")
                print("파일명: ", full_filename, "###########\t\t md5 해쉬: ", hash)

                url = f"https://public.api.malwares.com/api/v22/file/analysis/{hash}"
                headers = {
                    "x-api-key": "5D7F30B9145B41DD888A72A24C9C9A7AA671995FE0EF4F1189AAFA20179EF4E4",
                }

                response = requests.request("GET", url, headers=headers)
                json_response = response.json()
                # json_response = str(json_response).replace("\'", "\"")
                print(json_response)

                if json_response['result_code'] == int(1):  # or json_response['result_code'] == int(2):
                    pass
                    print("서버에 해시정보가 있습니다. 보내주신 해시값과 서버의 해시값을 비교합니다.")
                    f = open(imsiDir + hash + ".txt", "w")
                    f.write(str(json_response))
                    # f.write(json_response)
                    f.close()

                    with open(imsiDir + hash + ".txt") as f:
                        # data2 = json.load(json_file)
                        # data2 = eval(f.read())
                        data2 = literal_eval(f.read())  # str -> dic로 읽는다.

                        ai_score = data2['ai_score']
                        print(ai_score)
                        if data2['signcheck']:
                            signcheck = data2['signcheck']['verified']
                        else:
                            signcheck = 'None'
                        print(signcheck)
                        check = "파일이름 : " + str(filename) + "\nai_score : " + str(ai_score) + "\nsigncheck : " + str(
                            signcheck) + "\n\nDetection Malware!!!!!! "
                        if signcheck == "unsigned" or ai_score > int(3):
                            # if signcheck == 'None' or signcheck == "unsigned" or ai_score > int(3):
                            win32api.MessageBox(None, check, 'Warning!!!!', 0)

                elif json_response['result_code'] == int(2):
                    print(full_filename, " 이 파일은 현재 분석 진행중입니다. 5분 후에 다시 시도 하시기 바랍니다.")

                else:
                    # json_response['result_code'] == int(0)
                    print(full_filename, "이 파일은 서버에 해시 정보가 없으므로 파일을 서버에 업로드 후 해시정보를 다시 받아와야 합니다.")

                    params = {"api_key": api_key, "filename": full_filename}
                    files = {"file": (full_filename, open(full_filename, "rb"), 'application/octet-stream')}
                    # requests.post("https://public.api.malwares.com/v3/file/upload", files=files, data=params)
                    response = requests.post("https://public.api.malwares.com/v3/file/upload", files=files, data=params)
                    json_response = response.json()
                    print(json_response)
                    # print(json_response['md5'])
                    # hash = json_response['md5']
                    print("파일 업로드 중입니다. 약 1분정도 소요됩니다.")
                    time.sleep(30)

                    os.system('certUtil -hashfile "' + full_filename + '" MD5 > ' + imsiDir + 'imsi_hash.txt')
                    txtf = open(imsiDir + "imsi_hash.txt", "r", encoding="euckr")
                    data = txtf.read()
                    second_line = data.split('\n', 2)[1]
                    hash = second_line.replace(" ", "")
                    print("파일명: ", full_filename, "###########\t\t md5 해쉬: ", hash)

                    params = {'api_key': api_key, 'hash': hash}
                    response = requests.get('https://public.api.malwares.com/v3/file/mwsinfo', params=params)
                    json_response = response.json()
                    print(json_response)

                    if json_response['result_code'] == int(1):
                        pass
                        print("업로드 후 서버에 해시정보가 생겼습니다. 보내주신 해시값과 서버의 해시값을 비교합니다.")
                        f = open(imsiDir + hash + ".txt", "w")
                        f.write(str(json_response))
                        # f.write(json_response)
                        f.close()

                        with open(imsiDir + hash + ".txt") as f:
                            # data2 = json.load(json_file)
                            # data2 = eval(f.read())
                            data2 = literal_eval(f.read())  # str -> dic로 읽는다.

                            ai_score = data2['ai_score']
                            print(ai_score)
                            if data2['signcheck']:
                                signcheck = data2['signcheck']['verified']
                            else:
                                signcheck = 'None'
                            print(signcheck)
                            check = "파일이름 : " + str(filename) + "\n\nDetection Malware!!!!!! "
                            if signcheck == "unsigned" or ai_score > int(3):
                                # if signcheck == 'None' or signcheck == "unsigned" or ai_score > int(3):
                                win32api.MessageBox(None, check, 'Warning!!!!', 0)

                    else:
                        print(full_filename, "이 파일은 파일업로드 후에도 서버에 해시 정보가 없습니다. 개별적으로 확인해 보시기 바랍니다.")

                txtf.close()
            time.sleep(1)

